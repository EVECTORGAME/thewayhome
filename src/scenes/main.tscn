[gd_scene load_steps=12 format=3 uid="uid://0fje57i0c0sj"]

[ext_resource type="PackedScene" uid="uid://d26te0gv7khjd" path="res://scenes/block.tscn" id="1_w5kyn"]
[ext_resource type="Script" path="res://scripts/level.gd" id="1_wyd1u"]
[ext_resource type="PackedScene" uid="uid://cs8f1p76tn61f" path="res://scenes/player.tscn" id="2_4guff"]
[ext_resource type="PackedScene" uid="uid://b83dcv6fewvk8" path="res://scenes/start_sign.tscn" id="2_8eqav"]
[ext_resource type="PackedScene" uid="uid://d2754k6brsb7x" path="res://scenes/terrain.tscn" id="3_x3jfn"]
[ext_resource type="PackedScene" uid="uid://bbkg7ulps68cf" path="res://scenes/obstacleaction01.tscn" id="4_krrul"]
[ext_resource type="PackedScene" uid="uid://ejt2iy3ndq6q" path="res://scenes/obstacleaction02.tscn" id="4_shuqu"]

[sub_resource type="Shader" id="Shader_kau82"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.3.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;
uniform float exposure : hint_range(0, 128) = 1.0;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;

	COLOR = mix(ground, sky, step(0.0, EYEDIR.y)) * exposure;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7wa01"]
shader = SubResource("Shader_kau82")
shader_parameter/sky_top_color = Color(0.00450157, 0.478251, 0.709588, 1)
shader_parameter/sky_horizon_color = Color(1, 1, 1, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.00392157, 0.478431, 0.709804, 1)
shader_parameter/ground_horizon_color = Color(1, 1, 1, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.433
shader_parameter/exposure = 1.0

[sub_resource type="Sky" id="Sky_jnnoy"]
sky_material = SubResource("ShaderMaterial_7wa01")

[sub_resource type="Environment" id="Environment_ohgsb"]
background_mode = 2
sky = SubResource("Sky_jnnoy")

[node name="Main" type="Node3D"]
script = ExtResource("1_wyd1u")

[node name="Enviroment" type="Node3D" parent="."]

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="Enviroment"]
transform = Transform3D(1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 26.4884, 39.4248)

[node name="WorldEnvironment" type="WorldEnvironment" parent="Enviroment"]
environment = SubResource("Environment_ohgsb")

[node name="Terrain" parent="Enviroment" instance=ExtResource("3_x3jfn")]

[node name="StartSign" parent="Enviroment" instance=ExtResource("2_8eqav")]
transform = Transform3D(1, 0, 0, 0, 1.75873, 0, 0, 0, 1, -3.5, 0, 9)

[node name="Randomizer" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 50)

[node name="ObstacleAction02" parent="Randomizer" instance=ExtResource("4_krrul")]
transform = Transform3D(0.8, 0, 0, 0, 0.8, 0, 0, 0, 0.8, 0, 0, 10)

[node name="ObstaclesHolder" type="Node3D" parent="Randomizer"]

[node name="Obstacle01" parent="Randomizer/ObstaclesHolder" instance=ExtResource("1_w5kyn")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 10)

[node name="Obstacle02" parent="Randomizer/ObstaclesHolder" instance=ExtResource("1_w5kyn")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 10)

[node name="ObstacleAction01" parent="Randomizer" instance=ExtResource("4_shuqu")]
transform = Transform3D(0.8, 0, 0, 0, 0.8, 0, 0, 0, 0.8, 0, 0, 9.84)

[node name="Player" parent="." instance=ExtResource("2_4guff")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.25, 0)

[connection signal="custom_position_reseted" from="Player" to="." method="_on_player_custom_position_reseted"]
